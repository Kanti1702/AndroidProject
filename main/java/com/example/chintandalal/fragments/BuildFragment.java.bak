package com.example.chintandalal.fragments;

import android.app.ActionBar;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.media.Image;
import android.os.Bundle;
import android.os.Environment;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import  android.view.ViewGroup.LayoutParams;
import android.widget.Toast;

import com.example.chintandalal.wolfpackandroid.R;

import java.io.File;

/**
 * Created by chintandalal on 2/13/15.
 */
public class BuildFragment extends Fragment {

    LinearLayout myGallery;
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View layout = inflater.inflate(R.layout.activity_build, container, false);
        myGallery = (LinearLayout)layout.findViewById(R.id.mygallery);

        String ExternalStorageDirectoryPath = Environment.getExternalStorageDirectory().getAbsolutePath();
        String targetPath = ExternalStorageDirectoryPath + "/test/";
        Toast.makeText(getActivity(), targetPath, Toast.LENGTH_LONG).show();
//        File targetDirector = new File(targetPath);
//        File[] files = targetDirector.listFiles();
//        for (File file : files){
//           // myGallery.addView();
//        }
        return layout;
    }
    View insertPhoto(String path){
       // Bitmap bm = decodeSampleBitmapFromUri(path, 220, 220);
        LinearLayout layout = new LinearLayout(getActivity());
        layout.setLayoutParams(new LayoutParams(250 , 250));
        layout.setGravity(Gravity.CENTER);

        ImageView imageView = new ImageView(getActivity());
        imageView.setLayoutParams(new LayoutParams(220, 220));
        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
        layout.addView(imageView);
        return layout;
    }

    public Bitmap decodeSampledBitmapFromUri(String path, int reqWidth, int reqHeight){
        Bitmap bm = null;
        final BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(path, options);

        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);
        options.inJustDecodeBounds = false;
        bm = BitmapFactory.decodeFile(path, options);

        return  bm;
    }

    public int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight){
        final int height = options.outHeight;
        final int width = options.outWidth;
        int inSampleSize = 1;
        if(height > reqHeight || width > reqWidth){
            if(width > height){
                inSampleSize = Math.round((float)height / (float)reqHeight);
            }
            else{
                inSampleSize = Math.round((float)width / (float)reqWidth);
            }
        }
        return  inSampleSize;
    }

}
